#!/bin/sh
#
# Runs at the end of git flow feature finish
#
# Positional arguments:
# $1    The friendly name of the branch
# $2    The origin remote
# $3    The full branch name (including the feature prefix)
#
# The following variables are available as they are exported by git-flow:
#
# MASTER_BRANCH - The branch defined as Master
# DEVELOP_BRANCH - The branch defined as Develop
#
NAME=$1
ORIGIN=$2
BRANCH=$3

# Implement your script here.

# -- START -- not ready for use with dev team.
# echo "Old version is: $old_version"
# source $TMPDIR/git_pre_ver.sh
# -- FINISH -- not ready for use with dev team.

if test -f "pom.xml"; then
  mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion} versions:commit
  git ls-files -co --exclude-standard | grep '\pom.xml$' | xargs git add
  git commit -am "Updated maven pom version to exclude feature name"
fi

if test -f "package.json"; then
  prop="version"
  current_version="$(node -pe "require('./package.json')['$prop']")"
  npm version patch --no-git-tag-version
  git add package.json package-lock.json && git commit -am "Updated npm package version to exclude feature name"
fi

exit 0
