#!/bin/sh
#
# Runs at the end of git flow hotfix start
#
# Positional arguments:
# $1    The version (including the version prefix)
# $2    The origin remote
# $3    The full branch name (including the feature prefix)
# $4    The base from which this feature is started
#
# The following variables are available as they are exported by git-flow:
#
# MASTER_BRANCH - The branch defined as Master
# DEVELOP_BRANCH - The branch defined as Develop
#
VERSION=$1
ORIGIN=$2
BRANCH=$3
BASE=$4

# Implement your script here.
if test -f "pom.xml"; then
  mvn build-helper:parse-version versions:set -DnewVersion=$VERSION versions:commit
  git ls-files -co --exclude-standard | grep '\pom.xml$' | xargs git add
  git commit -am "Updated maven pom version to set hotfix version number"
fi

if test -f "package.json"; then
  npm version $VERSION --no-git-tag-version
  git add package.json package-lock.json && git commit -am "Updated npm package version to set hotfix version number"
fi

exit 0
